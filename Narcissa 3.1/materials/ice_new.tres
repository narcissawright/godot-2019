[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://texture/ice_seamless_contrast.png" type="Texture" id=1]


[sub_resource type="Shader" id=1]
code = "shader_type spatial;

uniform sampler2D noisetex;
uniform vec4 light_color : hint_color;
uniform vec4 dark_color : hint_color;

bool get_shiny(float uvt) {
		if (cos(uvt/1.5) < -0.98) {
			return true;
		}
	return false;
}

void fragment() {
	bool shiny = get_shiny(UV.x - UV.y - TIME*3.0);
	
	vec3 noise = texture(noisetex, UV ).rgb;
	EMISSION = vec3(0.01, 0.02, 0.1) / (noise / 2.0 + 0.5) ;
	ALBEDO = dark_color.rgb + (vec3(noise) * light_color.rgb);
	ROUGHNESS = 0.0;
	
	if (shiny) {
		//ALBEDO = dark_color.rgb + (vec3(noise) * light_color.rgb) + vec3(0.3, 0.3, 0.6);
	}
}

"

[resource]
shader = SubResource( 1 )
shader_param/light_color = Color( 0.709804, 0.933333, 1, 1 )
shader_param/dark_color = Color( 0.352941, 0.745098, 1, 1 )
shader_param/noisetex = ExtResource( 1 )

